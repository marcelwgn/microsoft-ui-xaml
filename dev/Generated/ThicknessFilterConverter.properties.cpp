// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See LICENSE in the project root for license information.

// DO NOT EDIT! This file was generated by CustomTasks.DependencyPropertyCodeGen
#include "pch.h"
#include "common.h"
#include "ThicknessFilterConverter.h"

namespace winrt::Microsoft::UI::Xaml::Controls::Primitives
{
    CppWinRTActivatableClassWithDPFactory(ThicknessFilterConverter)
}

#include "ThicknessFilterConverter.g.cpp"

GlobalDependencyProperty ThicknessFilterConverterProperties::s_FilterProperty{ nullptr };

ThicknessFilterConverterProperties::ThicknessFilterConverterProperties()
{
    EnsureProperties();
}

void ThicknessFilterConverterProperties::EnsureProperties()
{
    if (!s_FilterProperty)
    {
        s_FilterProperty =
            InitializeDependencyProperty(
                L"Filter",
                winrt::name_of<winrt::ThicknessFilterKind>(),
                winrt::name_of<winrt::ThicknessFilterConverter>(),
                false /* isAttached */,
                ValueHelper<winrt::ThicknessFilterKind>::BoxValueIfNecessary(winrt::ThicknessFilterKind::None),
                nullptr);
    }
}

void ThicknessFilterConverterProperties::ClearProperties()
{
    s_FilterProperty = nullptr;
}

void ThicknessFilterConverterProperties::Filter(winrt::ThicknessFilterKind const& value)
{
    [[gsl::suppress(con)]]
    {
    static_cast<ThicknessFilterConverter*>(this)->SetValue(s_FilterProperty, ValueHelper<winrt::ThicknessFilterKind>::BoxValueIfNecessary(value));
    }
}

winrt::ThicknessFilterKind ThicknessFilterConverterProperties::Filter()
{
    return ValueHelper<winrt::ThicknessFilterKind>::CastOrUnbox(static_cast<ThicknessFilterConverter*>(this)->GetValue(s_FilterProperty));
}
